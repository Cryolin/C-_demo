#include <iostream>
using namespace std;

int a;
int arr[5];

//int main() {
//	// 二维数组的定义方式
//	// 数据类型 数组名[数组行数][数组列数]
//	int arr1[2][3];
//
//	// 数据类型 数组名[数组行数][数组列数] = {{值1, 值2, ...}, {值3, 值4, ...}, ... {值5, 值6, ...}}
//	int arr2[2][3] = { {1,2,3},{4,5,6} };
//	int arr3[2][3] = { {},{4,5} }; // 不足的部分使用0填充
//
//	// 数据类型 数组名[数组行数][数组列数] = {值1, 值2, 值3, ...}
//	int arr4[2][3] = { 1,2,3,4,5,6 };
//	int arr5[2][3] = { 1,2 };
//	int arr6[2][3] = {}; // 不足的部分使用0填充
//
//	// 数据类型 数组名[][数组列数] = {值1, 值2, 值3, 值4}
//	int arr7[][3] = { 1,2,3,4,5,6 };
//	int arr8[][3] = { 1,2 }; // 自动计算，该数组为1行，不足部分补0
//	int arr9[][3] = { 1,2,3,4 }; // 自动计算，该数组为2行，不足部分补0
//	// int arr10[][3] = {}; // 无法编译
//	// int arr11[2][] = {1,2}; // 无法编译
//
//	// 二维数组的遍历 & 行数列数的获取
//	for (int i = 0; i < sizeof(arr8) / sizeof(arr8[0]); i++)
//	{
//		for (int j = 0; j < sizeof(arr8[0]) / sizeof(arr8[0][0]); j++)
//		{
//			cout << arr8[i][j] << "\t";
//		}
//		cout << endl;
//	}
//
//	system("pause");
//	return 0;
//}