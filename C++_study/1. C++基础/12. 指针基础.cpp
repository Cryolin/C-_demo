#include <iostream>

using namespace std;

//int main() {
//
//	int a = 10;
//
//	// 指针变量的定义和赋值
//	int* p = &a;
//
//	cout << "&a = " << &a << endl;	// 打印a的地址
//	cout << "p= " << p << endl;		// 打印指针变量p，其值等于a的地址
//
//	// 指针变量的使用
//	cout << "*p = " << *p << endl;	// 对p进行解引用，其值为10
//
//	cout << "修改*p的值为100" << endl;
//	*p = 100;
//	cout << "*p = " << *p << endl;	// 对p解引用，相当于对该地址保存的值赋值
//	cout << "a = " << a << endl;	// 变量a和*p的值也随之改变
//
//	// 指针保存内存地址
//	// 32位系统占用4个字节，64位系统占用8个字节
//	cout << "指针占用内存大小： " << sizeof(p) << endl;
//	cout << "指针占用内存大小： " << sizeof(int*) << endl;
//	cout << "指针占用内存大小： " << sizeof(float*) << endl;
//
//	// 空指针:指针变量指向内存中编号为0~255的空间
//	// 用途：初始化指针变量
//	// 注意：空指针指向的内存是不可以访问的
//	int* p1 = NULL;
//	//*p1 = 100;	// 不可以修改空指针地址的内容，报错
//	//cout << *p1 << endl;	// 同样也报错
//
//	// 野指针：指向非法内存空间
//	int* p2 = (int*)0x11010120;
//	cout << *p2 << endl;	// 不允许访问，程序报错
//
//	system("pause");
//	return 0;
//}